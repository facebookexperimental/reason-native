TestRunner â€º failing tests
Running 1 test suite
\r\027[33m\027[1m\027[7m RUNS \027[27m\027[22m\027[39m <whiteBright>failing tests</whiteBright>\027[75D\027[K\027[31m\027[1m\027[7m FAIL \027[27m\027[22m\027[39m <whiteBright>failing tests</whiteBright>
<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.toBeEmpty</red></bold>

    <dim>expect.string(</dim><red>received</red><dim>).toBeEmpty(</dim><green></green><dim>)</dim>
    
    Received: <red>\"foo\"</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.not.toBeEmpty</red></bold>

    <dim>expect.string(</dim><red>received</red><dim>).not.toBeEmpty(</dim><green></green><dim>)</dim>
    
    Expected value not to be empty, but received: <red>\"\"</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.toEqual</red></bold>

    <dim>expect.string(</dim><red>received</red><dim>).toEqual(</dim><green>expected</green><dim>)</dim>
    
    Expected value to equal:
      <green>\"delicious\"</green>
    Received:
      <red>\"bacon\"</red>
    
    Difference:
      <red>bacon</red><green>delicious</green><blackBright></blackBright>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.not.toEqual</red></bold>

    <dim>expect.string(</dim><red>received</red><dim>).not.toEqual(</dim><green>expected</green><dim>)</dim>
    
    Expected value to not equal:
      <green>\"bacon\"</green>
    Received:
      <red>\"bacon\"</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.toEqualFile</red></bold>

    Exception <dim>Sys_error(\"tests/testFiles/foo.txt: No such file or directory\")</dim>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.not.toEqualFile</red></bold>

    Exception <dim>Sys_error(\"tests/testFiles/simple.txt: No such file or directory\")</dim>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.file.not.toEqualFile</red></bold>

    Exception <dim>Sys_error(\"tests/testFiles/simple.txt: No such file or directory\")</dim>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.toBe(true)</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).toBe(</dim><green>expected</green><dim>)</dim>
    
    Expected: <green>true</green>
    Received: <red>false</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.not.toBe(false)</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).</dim>not<dim>.toBe(</dim><green>expected</green><dim>)</dim>
    
    Expected: <green>false</green>
    Received: <red>false</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.toBeTrue</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).toBeTrue(</dim><green></green><dim>)</dim>
    
    Received: <red>false</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.not.toBeTrue</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).</dim>not<dim>.toBeTrue(</dim><green></green><dim>)</dim>
    
    Received: <red>true</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.toBeFalse</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).toBeFalse(</dim><green></green><dim>)</dim>
    
    Received: <red>true</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.bool.not.toBeFalse</red></bold>

    <dim>expect.bool(</dim><red>received</red><dim>).</dim>not<dim>.toBeFalse(</dim><green></green><dim>)</dim>
    
    Received: <red>false</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.int.toBe</red></bold>

    <dim>expect.int(</dim><red>received</red><dim>).toBe(</dim><green>expected</green><dim>)</dim>
    
    Expected: <green>43</green>
    Received: <red>42</red>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.toMatchSnapshot mismatch</red></bold>

    <dim>expect.string(</dim><red>received</red><dim>).toMatchSnapshot(</dim><green>expected</green><dim>)</dim>
    
    <green>- anything else</green>
    <red>+ bacon3</red>
    
    Difference:
      <red>bacon3</red><green>anything else</green>

<bold><red>  \226\128\162 failing tests \226\128\186 expect.string.toMatchSnapshot no snapshot exists</red></bold>

    New snapshot was <red>not written</red>. The update flag must be explicitly passed to write a new snapshot.
    
    Received: <red>more bacon!</red>


<whiteBright><bold>Test Suites: </bold></whiteBright><red><bold>1 failed</bold></red>, 0 passed, 1 total
<whiteBright><bold>Tests:       </bold></whiteBright><red><bold>16 failed</bold></red>, 0 passed, 16 total
<whiteBright><bold>Time:        </bold></whiteBright>< 1ms

