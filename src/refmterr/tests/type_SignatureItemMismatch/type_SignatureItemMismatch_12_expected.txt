[2m[1m[39m# Unformatted Error Output:[0m
[2m# [0m[2mFile "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.ml", line 1:[0m
[2m# [0m[2mError: The implementation tests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.ml[0m
[2m# [0m[2m       does not match the interface tests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.cmi:[0m
[2m# [0m[2m       The type `wrongType' is required but not provided[0m
[2m# [0m[2m       File "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.mli", line 3, characters 0-22:[0m
[2m# [0m[2m         Expected declaration[0m
[2m# [0m[2m       The type `wrongArity' is required but not provided[0m
[2m# [0m[2m       File "tests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.mli", line 2, characters 0-23:[0m
[2m# [0m[2m         Expected declaration[0m


[7m[1m[31m ERROR [0m [4m[36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.ml[0m[4m[2m[39m:1 0-0[0m [1m[31m[0m

[2m[31m1 â”† [0m[4m[1m[31m[0m[2m[39m(* [0m[2m[34mTest[0m[2m[39m wrongly specified values but from interface *)[0m
[2m2 â”† [0m[2m[35mlet[0m[2m[39m createElement s = [0m[2m[34m0[0m
[2m3 â”† [0m[2m[35mlet[0m[2m[39m createEleml ent2 s = [0m[2m[32m"hi"[0m

[1mThis module is missing the type named[0m [1m[31mwrongArity[0m

  The following signature requires that [1mwrongArity[0m be defined:
  [36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.mli[0m[2m:2[0m

[1mThis module is missing the type named[0m [1m[31mwrongType[0m

  The following signature requires that [1mwrongType[0m be defined:
  [36mtests/type_SignatureItemMismatch/type_SignatureItemMismatch_12.mli[0m[2m:3[0m


[1m[35mLearn:[0m "Signatures" are interfaces that modules may implement.
  You can indicate that a Reason file (.re) implements a signature by
  creating an "interface file" (.rei) of the same name.
  Modules nested inside of a Reason file may also opt into being checked
  against any signature using the type constraint syntax `module M : Sig = ...`


